Design Patterns Document

Pattern 1: Singleton
  CLI.java: 12, (16-37)
  Justification: The CLI has an instance of itself with a getInstance and a private constructor, ensuring that only one instance of the object can be created.

Pattern 2: Model View Controller
  The whole project

Pattern 3: Factory
  UMLOBject.java, UMLObjectFactory.java, ClassItem.java (239,350), MethodItem.java (81)
  Justification: Decouples the creation of new Method, Field, and Parameter objects from related classes, standardizes getters and setters for type and name

Pattern 4: Builder
  ClassBoxBuilderInterface(entire interface), ClassBoxBuilder(entire class), mainDiagramController(169-172)
  Justification: The Interface allows for other builders to be created which could customize the ClassBox object and components as they wanted.
    We placed the file in /View as it creates ClassBox objects to be displayed in the GUI.

Pattern 5: Memento
  Caretaker.java (whole file), Data.java (115-171)
  Justification: Our caretaker class handles storing memento objects and the undo and redo methods in the class.
    The originator is our Data.java because both CLI and GUI pull from the Data to display.
    The memento is a class nested in our originator since we are creating mementos from the states of data during runtime.

Pattern 6: Observer (1st Instance)
  ClassItem.java(15,73,208,249,320,345,380,406,439,461,495,520,532-548), ClassBox(73,867-896)
  Justification: ClassItems notifying their observers(ClassBox) that their information has changed allows for the GUI to update only when the model updates.
    This is more efficient than manually calling an update in the GUI to check if ClassItems have changed.

Pattern 7: Observer (2nd Instance)
  ClassItem.java(317) MethodItem.java(92,126,162,189,211,235-241)
  Justification: Since ParameterItems are stored in MethodItems it was necessary to add a ClassItem as an observer of the MethodItem in order to update
    the view when parameters were changed within a method. This also prevents manually calling update when a parameter is changed.